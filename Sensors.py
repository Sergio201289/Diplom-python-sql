# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled2.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import pypyodbc
from PyQt5 import QtCore, QtGui, QtWidgets
from otchet import Ui_MainWindow

class Ui_Sensors(object):
    def setupUi(self, MainWindow2):
        MainWindow2.setObjectName("MainWindow2")
        MainWindow2.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow2)
        self.centralwidget.setObjectName("centralwidget")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(20, 100, 601, 301))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        self.pushButton2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton2.setGeometry(QtCore.QRect(640, 260, 101, 23))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton2.setFont(font)
        self.pushButton2.setObjectName("pushButton2")
        self.AddButton = QtWidgets.QPushButton(self.centralwidget)
        self.AddButton.setGeometry(QtCore.QRect(640, 110, 101, 23))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.AddButton.setFont(font)
        self.AddButton.setObjectName("AddButton")
        self.DeleteButton = QtWidgets.QPushButton(self.centralwidget)
        self.DeleteButton.setGeometry(QtCore.QRect(640, 160, 101, 23))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.DeleteButton.setFont(font)
        self.DeleteButton.setObjectName("deleteButton")
        self.editButton = QtWidgets.QPushButton(self.centralwidget)
        self.editButton.setGeometry(QtCore.QRect(640, 210, 101, 23))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.editButton.setFont(font)
        self.editButton.setObjectName("editButton")
        self.BackButton = QtWidgets.QPushButton(self.centralwidget)
        self.BackButton.setGeometry(QtCore.QRect(640, 310, 101, 23))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.BackButton.setFont(font)
        self.BackButton.setObjectName("BackButton")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(20, 460, 91, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 410, 91, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAcceptDrops(False)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setWordWrap(True)
        self.label.setObjectName("label")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(120, 460, 91, 20))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(120, 410, 81, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_2.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setAcceptDrops(False)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setWordWrap(True)
        self.label_2.setObjectName("label_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(220, 460, 91, 20))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(220, 410, 81, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_3.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setAcceptDrops(False)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setWordWrap(True)
        self.label_3.setObjectName("label_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_4.setGeometry(QtCore.QRect(320, 460, 91, 20))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(320, 410, 81, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_4.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setAcceptDrops(False)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setWordWrap(True)
        self.label_4.setObjectName("label_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_5.setGeometry(QtCore.QRect(420, 460, 91, 20))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(420, 410, 81, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_5.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setAcceptDrops(False)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setWordWrap(True)
        self.label_5.setObjectName("label_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_6.setGeometry(QtCore.QRect(520, 460, 91, 20))
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(520, 410, 81, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_6.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setAcceptDrops(False)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setWordWrap(True)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(0, 0, 801, 611))
        self.label_7.setText("")
        self.label_7.setPixmap(QtGui.QPixmap("../../Downloads/1616028946_47-p-fon-relsi-53.jpg"))
        self.label_7.setObjectName("label_7")
        self.label_7.raise_()
        self.tableWidget.raise_()
        self.pushButton2.raise_()
        self.AddButton.raise_()
        self.DeleteButton.raise_()
        self.editButton.raise_()
        self.BackButton.raise_()
        self.lineEdit.raise_()
        self.label.raise_()
        self.lineEdit_2.raise_()
        self.label_2.raise_()
        self.lineEdit_3.raise_()
        self.label_3.raise_()
        self.lineEdit_4.raise_()
        self.label_4.raise_()
        self.lineEdit_5.raise_()
        self.label_5.raise_()
        self.lineEdit_6.raise_()
        self.label_6.raise_()
        MainWindow2.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow2)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow2.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow2)
        self.statusbar.setObjectName("statusbar")
        MainWindow2.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow2)

    def loaddata(self, station, type):
        connection = pypyodbc.connect('Driver={SQL Server};'
                                      'Server=WIN-P66F1JER45H\SQLEXPRESS01;'
                                      'Database=rzd;')
        cursor = connection.cursor()
        sqlquery = "SELECT * FROM Sensors WHERE Станция = '" + station + "' AND Тип = '" + type + "'"
        print(sqlquery)
        self.tableWidget.setRowCount(50)
        self.tableWidget.clear()
        self.tableWidget.setHorizontalHeaderLabels(["Серийный номер", "Показания", "Норма", "Включен", "Тип", "Станция"])
        tablerow = 0
        for row in cursor.execute(sqlquery):
            self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row[0])))
            self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(row[1])))
            self.tableWidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(row[2])))
            self.tableWidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row[3])))
            self.tableWidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(str(row[4])))
            self.tableWidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(str(row[5])))
            tablerow += 1
        connection.close()

    def retranslateUi(self, MainWindow2):
        _translate = QtCore.QCoreApplication.translate
        MainWindow2.setWindowTitle(_translate("MainWindow2", "MainWindow"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow2", "Серийный номер"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow2", "Показания"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow2", "Норма"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow2", "Включен"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow2", "Тип"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow2", "Станция"))
        self.pushButton2.setText(_translate("MainWindow2", "Отчет"))
        self.AddButton.setText(_translate("MainWindow2", "Добавить"))
        self.DeleteButton.setText(_translate("MainWindow2", "Удалить"))
        self.editButton.setText(_translate("MainWindow2", "Редактировать"))
        self.BackButton.setText(_translate("MainWindow2", "Назад"))
        self.label.setText(_translate("MainWindow2", "Фильтр по Серийный номер"))
        self.label_2.setText(_translate("MainWindow2", "Фильтр по Показания"))
        self.label_3.setText(_translate("MainWindow2", "Фильтр по Норма"))
        self.label_4.setText(_translate("MainWindow2", "Фильтр по Включен"))
        self.label_5.setText(_translate("MainWindow2", "Фильтр по Тип"))
        self.label_6.setText(_translate("MainWindow2", "Фильтр по Станция"))

    def deletebutton(self):
        try:
            connection = pypyodbc.connect('Driver={SQL Server};'
                                          'Server=WIN-P66F1JER45H\SQLEXPRESS01;'
                                          'Database=rzd;')
            serial = self.tableWidget.item(self.tableWidget.currentRow(), 0).text()
            sqlquery = "DELETE FROM Sensors WHERE [Серийный номер] = '" + serial + "'"
            cursor = connection.cursor()
            cursor.execute(sqlquery)
            connection.commit()
            connection.close()
        except:
            pass

    def serialfilter(self, stationkey, typekey):
        connection = pypyodbc.connect('Driver={SQL Server};'
                                      'Server=WIN-P66F1JER45H\SQLEXPRESS01;'
                                      'Database=rzd;')
        cursor = connection.cursor()
        serial = self.lineEdit.text()
        sqlquery = "SELECT * FROM Sensors WHERE [Серийный номер] LIKE '" + serial + "%' AND Станция = '" \
                   + stationkey + "' AND Тип = '" + typekey + "'"
        self.tableWidget.setRowCount(50)
        self.tableWidget.clear()
        tablerow = 0
        for row in cursor.execute(sqlquery):
            self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row[0])))
            self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(row[1])))
            self.tableWidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(row[2])))
            self.tableWidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row[3])))
            self.tableWidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(row[4]))
            self.tableWidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(row[5]))
            tablerow += 1
        connection.close()

    def readingsfilter(self, stationkey, typekey):
        connection = pypyodbc.connect('Driver={SQL Server};'
                                      'Server=WIN-P66F1JER45H\SQLEXPRESS01;'
                                      'Database=rzd;')
        cursor = connection.cursor()
        readings = self.lineEdit_2.text()
        sqlquery = "SELECT * FROM Sensors WHERE Показания LIKE '" + readings + "%' AND Станция = '" \
                   + stationkey + "' AND Тип = '" + typekey + "'"
        self.tableWidget.setRowCount(50)
        self.tableWidget.clear()
        tablerow = 0
        for row in cursor.execute(sqlquery):
            self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row[0])))
            self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(row[1])))
            self.tableWidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(row[2])))
            self.tableWidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row[3])))
            self.tableWidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(row[4]))
            self.tableWidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(row[5]))
            tablerow += 1
        connection.close()

    def normalfilter(self, stationkey, typekey):
        connection = pypyodbc.connect('Driver={SQL Server};'
                                      'Server=WIN-P66F1JER45H\SQLEXPRESS01;'
                                      'Database=rzd;')
        cursor = connection.cursor()
        normal = self.lineEdit_3.text()
        sqlquery = "SELECT * FROM Sensors WHERE Норма LIKE '" + normal + "%' AND Станция = '" \
                   + stationkey + "' AND Тип = '" + typekey + "'"
        self.tableWidget.setRowCount(50)
        self.tableWidget.clear()
        tablerow = 0
        for row in cursor.execute(sqlquery):
            self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row[0])))
            self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(row[1])))
            self.tableWidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(row[2])))
            self.tableWidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row[3])))
            self.tableWidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(row[4]))
            self.tableWidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(row[5]))
            tablerow += 1
        connection.close()

    def statusfilter(self, stationkey, typekey):
        connection = pypyodbc.connect('Driver={SQL Server};'
                                      'Server=WIN-P66F1JER45H\SQLEXPRESS01;'
                                      'Database=rzd;')
        cursor = connection.cursor()
        status = self.lineEdit_4.text()
        sqlquery = "SELECT * FROM Sensors WHERE Включен LIKE '" + status + "%' AND Станция = '" \
                   + stationkey + "' AND Тип = '" + typekey + "'"
        self.tableWidget.setRowCount(50)
        self.tableWidget.clear()
        tablerow = 0
        for row in cursor.execute(sqlquery):
            self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row[0])))
            self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(row[1])))
            self.tableWidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(row[2])))
            self.tableWidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row[3])))
            self.tableWidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(row[4]))
            self.tableWidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(row[5]))
            tablerow += 1
        connection.close()

    def typefilter(self, stationkey, typekey):
        connection = pypyodbc.connect('Driver={SQL Server};'
                                      'Server=WIN-P66F1JER45H\SQLEXPRESS01;'
                                      'Database=rzd;')
        cursor = connection.cursor()
        type = self.lineEdit_5.text()
        sqlquery = "SELECT * FROM Sensors WHERE Тип LIKE '" + type + "%' AND Станция = '" \
                   + stationkey + "' AND Тип = '" + typekey + "'"
        self.tableWidget.setRowCount(50)
        self.tableWidget.clear()
        tablerow = 0
        for row in cursor.execute(sqlquery):
            self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row[0])))
            self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(row[1])))
            self.tableWidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(row[2])))
            self.tableWidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row[3])))
            self.tableWidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(row[4]))
            self.tableWidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(row[5]))
            tablerow += 1
        connection.close()

    def stationfilter(self, stationkey, typekey):
        connection = pypyodbc.connect('Driver={SQL Server};'
                                      'Server=WIN-P66F1JER45H\SQLEXPRESS01;'
                                      'Database=rzd;')
        cursor = connection.cursor()
        station = self.lineEdit_6.text()
        sqlquery = "SELECT * FROM Sensors WHERE Станция LIKE '" + station + "%' AND Станция = '" \
                   + stationkey + "' AND Тип = '" + typekey + "'"
        self.tableWidget.setRowCount(50)
        self.tableWidget.clear()
        tablerow = 0
        for row in cursor.execute(sqlquery):
            self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(str(row[0])))
            self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(row[1])))
            self.tableWidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(row[2])))
            self.tableWidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(str(row[3])))
            self.tableWidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(row[4]))
            self.tableWidget.setItem(tablerow, 5, QtWidgets.QTableWidgetItem(row[5]))
            tablerow += 1
        connection.close()

    def otchet(self, station, type):
        global Otchet
        Otchet = QtWidgets.QMainWindow()
        uiotchet = Ui_MainWindow()
        uiotchet.setupUi(Otchet)
        connection = pypyodbc.connect('Driver={SQL Server};'
                                      'Server=WIN-P66F1JER45H\SQLEXPRESS01;'
                                      'Database=rzd;')
        cursor = connection.cursor()
        sqlquery = "SELECT * FROM Sensors WHERE Станция = '" + station + "' AND Тип = '" + type + "'"
        tablerow = 1
        uiotchet.listWidget.addItem("Датчики \n ---------------------------- \n"
                                    "Станция - " + station + "\n Тип - "
                                    + type + "\n---------------------------- \n")
        for row in cursor.execute(sqlquery):
            uiotchet.listWidget.addItem(str(tablerow) + ") Серийный номер - " + str(row[0]) + " Показания - " + str(row[1])
                                        + " Норма - " + str(row[2]) + " Включен - " + str(row[3]) + "\n")
            tablerow += 1
        uiotchet.listWidget.addItem(" ----------------------------\n" +
                                    "Общее количество = " + str(tablerow - 1))
        connection.close()
        Otchet.show()